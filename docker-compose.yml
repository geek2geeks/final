version: '3.8'

services:
  # PostgreSQL 15 Database
  postgres:
    image: postgres:15-alpine
    container_name: quizztok-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: quizztok_dev
      POSTGRES_USER: quizztok
      POSTGRES_PASSWORD: dev_password_123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - quizztok-network

  # Redis 7 Cache & Session Store
  redis:
    image: redis:7-alpine
    container_name: quizztok-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass dev_redis_123
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./infrastructure/docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - quizztok-network

  # NestJS API Backend
  api:
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
    container_name: quizztok-api
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://quizztok:dev_password_123@postgres:5432/quizztok_dev
      REDIS_URL: redis://:dev_redis_123@redis:6379
      JWT_SECRET: dev_jwt_secret_key_change_in_production
      PORT: 3001
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./apps/api:/app
      - /app/node_modules
    networks:
      - quizztok-network
    develop:
      watch:
        - action: sync
          path: ./apps/api/src
          target: /app/src
        - action: rebuild
          path: ./apps/api/package.json

  # Next.js Web Frontend
  web:
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
    container_name: quizztok-web
    restart: unless-stopped
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: https://localhost:3001
      NEXTAUTH_URL: https://localhost:3000
      NEXTAUTH_SECRET: dev_nextauth_secret_change_in_production
    ports:
      - "3000:3000"
    depends_on:
      - api
    volumes:
      - ./apps/web:/app
      - /app/node_modules
      - /app/.next
    networks:
      - quizztok-network
    develop:
      watch:
        - action: sync
          path: ./apps/web/src
          target: /app/src
        - action: rebuild
          path: ./apps/web/package.json

  # HTTPS Proxy for Local Development
  https-proxy:
    image: nginx:alpine
    container_name: quizztok-https-proxy
    restart: unless-stopped
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./infrastructure/docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./infrastructure/docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - web
      - api
    networks:
      - quizztok-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  quizztok-network:
    driver: bridge